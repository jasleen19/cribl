[tool.poetry]
name = "cribl"
version = "0.1.0"
description = "Log Agent"
authors = ["Jasleen Kaur <jasleenkaur1909@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.1"
httpx = "^0.27.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.2"
pytest = "^8.2.2"
pyright = "^1.1.372"
pytest-cov = "^5.0.0"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 120

[tool.poe.tasks]
install = "poetry install"
test = "python -m pytest"
lint = "ruff check"
dev = "fastapi dev ./app/server/primary.py"
prod = "fastapi run ./app/server/primary.py"

## Large demo
p = "bash -c 'SECONDARIES=127.0.0.1:8001 fastapi dev app/server/primary.py --port 8000'"
s = "bash -c 'fastapi dev app/server/secondary.py --port 8001'"
c = """
curl -N  \
  'http://127.0.0.1:8000/logs?hostname=127.0.0.1:8001&filename=dummy.log&n=10000' \ 
  -H 'accept: text/plain'
"""

# Slowed down large demo
slow_p = "bash -c 'SECONDARIES=127.0.0.1:8001 DEMO_SLOW_STREAM=true fastapi dev app/server/primary.py --port 8000'"
slow_s = "bash -c 'DEMO_SLOW_STREAM=true fastapi dev app/server/secondary.py --port 8001'"
slow_c = """
curl -N  \
  'http://127.0.0.1:8000/logs?hostname=127.0.0.1:8001&filename=dummy.log&n=10000' \ 
  -H 'accept: text/plain'
"""

build = "docker build -t cribl ."
rm = "docker image rm cribl"

up = "docker-compose up -d --force-recreate"
down = "docker-compose down"
logs = "docker-compose logs -f"
curl = """
curl -N  \
  'http://0.0.0.0:8000/logs?hostname=secondary-2:8000&filename=alternatives.log&n=60' \ 
  -H 'accept: text/plain'
"""

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
